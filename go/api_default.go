/*
 * Loan Calculator
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"encoding/json"
	"io/ioutil"
	"net/http"
	"fmt"

)

func CalcInterestOnly(calcLoan CalculateloanBody) (loanRep LoanRepayments) {
	//Declaring variables to be used for the home loan calculations - taken out of the CalculateloanBody struct
	principal := calcLoan.LoanAmount
	interest := float64(calcLoan.InterestRate)
	nYears := calcLoan.LoanTerm

	if calcLoan.LoanType == "interest" {
	
	for i := int32(0); i < nYears; i++ {
		var loanRepaymentsAmountOwing LoanRepaymentsAmountOwing
		loanRepaymentsAmountOwing.Principal = int32(principal)
		loanRepaymentsAmountOwing.Year = int32(i)
		loanRep.MonthlyRepayments = int32(float64(loanRepaymentsAmountOwing.Principal) * (interest / 12))
		loanRep.TotalInterestPayable = int32(float64(principal) * (interest / 12) * float64(nYears) * 12)
		loanRepaymentsAmountOwing.Interest = (loanRep.TotalInterestPayable - (loanRep.MonthlyRepayments * i))
		loanRepaymentsAmountOwing.Total = loanRepaymentsAmountOwing.Principal + loanRepaymentsAmountOwing.Interest
		loanRep.AmountOwing = append(loanRep.AmountOwing, loanRepaymentsAmountOwing)
	}
	}

	return loanRep
}

func CalculateLoan(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)


	requestBodyBytes, _ := ioutil.ReadAll(r.Body)
	var newPerson CalculateloanBody
	err1 := json.Unmarshal(requestBodyBytes, &newPerson) //

	//Checking the error
	if err1 != nil {
		fmt.Println("Error")
		return
	}

	res := CalcInterestOnly(newPerson)

	jresponse, _ := json.Marshal(&res) //convert CalculateloanBody type to string for sending back

	err2,_ := w.Write(jresponse)

	//Checking the error
	if err2 != nil {
		fmt.Println("Error")
		return
	}

	fmt.Println(err1)
	fmt.Println(err2)

}
